Overall Workflow:
    Step1:
        => Column configuration can be given using:
            csv
            json
            html form-input    
        => Other values will have some defaults which needs to be decided     

    Step2:
        => Once all columns are configured, show the details of all the columns. User can edit the details if want  
        => Ask for the total count, output format etc.
        => Ensure that generation is possible(like if unique selected and given range cannot satisfy the unique value) 
        => Save the results under a given schema set name 

    Step3: 
        => Generate values in parallel if possible( for some columns, we need to generate row wise)
        => For each type of configuration, can create different python scripts.
        => Save to a given location(FTP, local file system) and share the location with the user.



Detialed Workflow:

    Column Config Input:
        (attribute: type, input-type, input-constraint, additional description)

        name:       string, 
                    text, 
                    NotNull
        type:       string, 
                    select,
                    NotNull, 
                    avaliable values: (Numeric, AlphaNumeric, Decimal), 
                    column values like date will be Alphanumeric       
        subType:    string, 
                    select,
                    string by default, 
                    avaliable values: (int, float, char, string, bool, customType like date etc.),              
        maxLen:     integer, 
                    10 by default,
                    Not applicable for Numeric and Decimal
        minLen:     integer, 
                    0 by default,
                    Not applicable for Numeric and Decimal
        rangeType:  string, 
                    select,
                    start-end by default,
                    List elements: (start-end, from-list(maxlen and minlen will be ignored), char-from-list, predefined) 
        range:      string, 
                    text,
                    NotNull 
                    takes a list like:['A','B','C','D'] or tuple like: (from, to) or predefined value like "alphabets", "numbers" etc. 
        format:     string,
                    text,
                    None by default,
                    only applicable in case format is numeric, float or decimal, float
        variance:   string,
                    text,
                    -1 by default,
                    Only show if type is Numeric,
                    Optional Dev
        colPosn:    integer
        unique:     string,
                    text,
                    NO by default,
        dupFactor:  string,
                    text,
                    1 if unique, -1 if not specified,
                    max amount of duplicates
        relation:   string,
                    text,
                    None by default,
                    relation like (1-1, 1-n, m-n), ratio(max to max) e.g. 1-7 one value could have at most seven relations 
                    can chain relationship bw more that 2 cols, e.g. for log entries on a particular date, show log with info tag,
                    Need to analyze some datasets for this
        template:   string,
                    select,
                    None by default,
                    values like SSN, address or reuse other config columns etc,
                    Need functionality for creating custom templates,
                    other attributes will be pre-filled if this is selected  
        custom:     string,
                    textarea,
                    None by default,
                    For custom sql like queries(simple DDL to be developed)

    
    The form configs will be loaded from server(to poplulate options in the form) in the following format:
    {
        "colname": [options],
    } 
    e.g.: for rangeType, it will be:
    {
        "rangeType":[start-end, from-list, char-from-list]
    }       
    Additional items can be added to the form config JSON.



    This will be sent to the server in the following format:
        {
            "name":"",
            "type":"",
            "subtype":"",
            "minLen":"",
            "maxLen":"",
            "rangeType":"",
            "range":"",
            "format":"",
            "variance":"",
            "colPosn":"",
            "unique":"",
            "dupFactor":"",
            "relation":"",
            "template":"",
            "custom":""
        }
    
    Logic Design(Python scripts):
    Note: Use classes to divide a set of functions
        One master script:
            which will parse the input and design various conditional statements for different scenarios of data config. It will also be responsible for dividing and combining columns before/after data genration.
        Common Scripts:
            Common set of functions like generating data from a-b, word length range, 
            These would be usd by each worker script
        Other worker/slave Scripts: 
            Need to make sure to consider all the config attributes while generating columns
        


